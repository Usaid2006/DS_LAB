#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *left, *right;
};

typedef struct node *BSTNODE;

// Function to create a new node
BSTNODE newNodeInBST(int item) {
    BSTNODE temp = (BSTNODE)malloc(sizeof(struct node));
    temp->data = item;
    temp->left = temp->right = NULL;
    return temp;
} BSTNODE insertNodeInBST(BSTNODE node, int ele) {
    if (node == NULL) {
        printf("Successfully inserted.\n");
        return newNodeInBST(ele);
    }
    if (ele < node->data) {
        node->left = insertNodeInBST(node->left, ele);
    } else if (ele > node->data) {
        node->right = insertNodeInBST(node->right, ele);
    }
    return node;
}// Function to perform in-order traversal
void inorderInBST(BSTNODE root) {
    if (root != NULL) {
        inorderInBST(root->left);
        printf("%d ", root->data);
        inorderInBST(root->right);
    }
}
void preorderInBST(BSTNODE root) {
}*/
