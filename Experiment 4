#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct LinkedList {
    struct Node* head;
    int size;
};

struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    if (newNode == NULL) {
        printf("Memory allocation failed\n");
        exit(1);
    }
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

struct LinkedList* initializeList() {
    struct LinkedList* list = (struct LinkedList*)malloc(sizeof(struct LinkedList));
    if (list == NULL) {
        printf("Memory allocation failed\n");
        exit(1);
    }
    list->head = NULL;
    list->size = 0;
    return list;
}

void insert(struct LinkedList* list, int data, int position) {
    // write your code here for insertion
    	struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
	newNode->data = data;
	newNode->next = NULL;

	if (position<0)
	{
		printf("Invalid position\n");
		return;
	}

	if (position==0)
	{
		newNode->next = list->head;
		list->head = newNode;
		printf("Element %d inserted at position %d\n",data,position);
		return;
	}

	struct Node* temp = list->head;
	int count = 0;
	while(temp!=NULL && count<position-1)
		{
			temp = temp->next;
			count++;
		}
	if (temp==NULL)
